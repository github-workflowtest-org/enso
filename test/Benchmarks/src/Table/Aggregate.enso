from Standard.Base import all hiding First, Last

from Standard.Table import Table, Aggregate_Column

from Standard.Test import Bench, Faker


create_table : Integer -> Integer -> Table
create_table rows (seed=1646322139) =
    faker = Faker.new seed
    key1 = ["Code", 0.up_to rows . map _-> faker.alpha 3]
    key2 = ["Index", 0.up_to rows . map _-> faker.integer 0 10]
    key3 = ["Flag", 0.up_to rows . map _-> faker.boolean]
    value1 = ["Value", 0.up_to rows . map _-> ((faker.float -100 100)*100000).floor/100000]
    value2 = ["ValueWithNothing", 0.up_to rows . map _-> faker.make_some_nothing ((faker.float -100 100)*100).floor/100]
    text1 = ["TextWithNothing", 0.up_to rows . map _-> faker.make_some_nothing (faker.alpha_numeric 10)]
    text2 = ["Hexadecimal", 0.up_to rows . map _-> faker.make_some_nothing (faker.hexadecimal 8)]
    Table.new [key1, key2, key3, value1, value2, text1, text2]


options = Bench.options . set_warmup (Bench.phase_conf 1 3) . set_measure (Bench.phase_conf 1 3)


type Data
    Value ~table

    create rows = Data.Value (create_table rows)


collect_benches = Bench.build builder->
    vector_size = 250000
    data = Data.create vector_size

    builder.group "Table_Aggregate" options group_builder->
        group_builder.specify "Count_table" <|
            data.table.aggregate [Aggregate_Column.Count]

        group_builder.specify "Max_table" <|
            data.table.aggregate [Aggregate_Column.Maximum "ValueWithNothing"]

        group_builder.specify "Sum_table" <|
            data.table.aggregate [Aggregate_Column.Sum "ValueWithNothing"]

        group_builder.specify "Count_Distinct_table" <|
            data.table.aggregate [Aggregate_Column.Count_Distinct "Index"]

        group_builder.specify "StDev_table" <|
            data.table.aggregate [Aggregate_Column.Standard_Deviation "Value"]

        group_builder.specify "Median_table" <|
            data.table.aggregate [Aggregate_Column.Median "Value"]

        group_builder.specify "Mode_table" <|
            data.table.aggregate [Aggregate_Column.Mode "Index"]

        group_builder.specify "Count_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Count]

        group_builder.specify "Max_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Maximum "ValueWithNothing"]

        group_builder.specify "Sum_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Sum "ValueWithNothing"]

        group_builder.specify "Count_Distinct_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Count_Distinct "Code"]

        group_builder.specify "StDev_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Standard_Deviation "Value"]

        group_builder.specify "Median_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Median "Value"]

        group_builder.specify "Mode_grouped" <|
            data.table.aggregate ["Index"] [Aggregate_Column.Mode "Index"]

        group_builder.specify "Count_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Count]

        group_builder.specify "Max_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Maximum "ValueWithNothing"]

        group_builder.specify "Sum_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Sum "ValueWithNothing"]

        group_builder.specify "Count_Distinct_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Count_Distinct "Code"]

        group_builder.specify "StDev_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Standard_Deviation "Value"]

        group_builder.specify "Median_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Median "Value"]

        group_builder.specify "Mode_2_level_groups" <|
            data.table.aggregate ["Index", "Flag"] [Aggregate_Column.Mode "Index"]


main = collect_benches . run_main
